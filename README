
The Enabler plugin loads plugins/bundles (Ã  la pathogen) on demand as requested 
by the user. It's main goal is to manage your 'runtimepath' as needed. It thus 
allows users to have tons of vim plugins/bundles at their finger tips without 
slowing down startup time.

Plugins/bundles are enabled:

    - on explicit demand via |:Enable|
    - or implicitly when
        - setting a filetype (see |:Enablefiletype|)
        - editing a file matching a |regexp| (see |:Enablefilepattern|)
        - calling an unknown function (see |:Enableautoload|)
        - invoking a map (see |:Enablemap|)
        - calling a command (see |:Enablecommand|)

Enabler can also scan available plugins/bundles and generate stub commands and 
maps for you (see |:Enablegenerate|). These autoenabler definitions can be 
loaded via |:Autoenabler|.

The doc files of installed plugins/bundles can be made available via 
|:Enablehelptags|.

Most vim plugin managers try to do at least two things: manage your 
'runtimepath' and manage (install, update, remove) plugins. The Enabler plugin 
focuses on the first task, i.e., managing the 'runtimepath' variable and 
enabling plugins as needed. The Enabler plugin doesn't provide a way to 
download / install / update / remove / build these plugins. Users should use 
one of the other vim plugin managers available, shell scripts or whatever.

Enabler is the successor of the tplugin plugin.


-----------------------------------------------------------------------

Status:  Experimental
Install: See http://github.com/tomtom/vimtlib/blob/master/INSTALL.TXT
See http://github.com/tomtom for related plugins.

