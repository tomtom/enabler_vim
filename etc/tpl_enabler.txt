*enabler.txt*         Load plugins/bundles as needed
                      Author: Tom Link, micathom at gmail com

The Enabler plugin loads plugins/bundles (similar to pathogen) on demand as 
requested by the user. It's main goal is to manage your 'runtimepath' as 
needed. It thus allows users to have tons of vim plugins/bundles at their 
finger tips without slowing down startup time.

Enabler supports the following types of bundles:

    1. Bundles (see |g:enabler#dirs|) are enabled on explicit demand via 
       |:Enable|.

    2. After invoking |:Autoenabler|, autobundles (see |g:enabler#auto#dirs|, 
       which defaults to |g:enabler#dirs|) are also enabled implicitly when:

        - setting a filetype (see |:Enablefiletype|)
        - editing a file matching a |regexp| (see |:Enablefilepattern|)
        - calling an unknown function (see |:Enableautoload|)
        - invoking a map (see |:Enablemap|)
        - calling a command (see |:Enablecommand|)

    3. Filetype bundles (see |g:enabler#ftbundle_dirs|) are enabled when 
       opening a file with a given filetype for the first time.

Enabler can also scan available plugins/bundles and generate stub commands and 
maps for you (see |:Enablegenerate|). These autoenabler definitions can be 
loaded via |:Autoenabler|.

The doc files of installed plugins/bundles can be made available via 
|:Enablehelptags|.

Most vim plugin managers try to do at least two things: manage your 
'runtimepath' and manage (install, update, remove) plugins. The Enabler plugin 
focuses on the first task, i.e., managing the 'runtimepath' variable and 
enabling plugins as needed. The Enabler plugin doesn't provide a way to 
download / install / update / remove / build these plugins. Users should use 
one of the other vim plugin managers available, shell scripts or whatever.

Enabler is the successor of the tplugin plugin.


-----------------------------------------------------------------------
Install~

If you want to install the vba from vim.org, open the vba file in VIM (see 
`:help vimball` for details) and type: >

    :so %%

If you want to install from git, clone http://github.com/tomtom/enabler_vim/
to ~/.vim/bundle/enabler_vim: >

    cd ~/.vim/bundle
    git clone https://github.com/tomtom/enabler_vim.git

In order to make full use of the enabler plugin, you could insert something 
like the the following lines at the top of the |vimrc| file: >

    """ If enabler is installed as bundle, add the directory of the enabler 
    """ bundle to 'rtp' (the value may differ from your setup):
    set rtp+=$HOME/.vim/bundle/enabler_vim
    """ If enabler is installed in ~/.vim replace the above line with the 
    """ following:
    " runtime! plugin/enabler.vim

    """ Optionally customize enabler's behaviour:
    " let g:enabler... = ...

    """ Load the plugin:
    runtime! plugin/enabler.vim

    """ Enable a standard set of plugins you always use:
    Enable ...

    """ Optionally load |autoenabler.vim| (must run |:Enablegenerate| first):
    Autoenabler


%s
